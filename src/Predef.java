
import hotelgui.UpdateInfo;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Scanner;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;


public class Predef extends javax.swing.JFrame {

    /**
     * Creates new form Predef
     */
    public Predef() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(810, 510));
        setSize(new java.awt.Dimension(810, 510));

        jList1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Show hotel with highest number of reservations.", "Number of Rooms in each hotel.", "List guests above 20 years of age.", "Average cost of a night stay in Mysore.", "Names of guest who either have a reservation in Royal Inn or Ginger Hotel.", "List hotels having more than 3 reservations.", "Create a view of every room.", "Create a view of the name of customers and estimated bill amount.", "Hike prices of rooms by 10% and show the update history (triggers).", "Reduce prices of rooms by 10% and show the update history(triggers)." };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Execute this!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("GO BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(255, 0, 0));
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("Query List");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lineart.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jButton1)
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(22, 22, 22))))
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         int ch=jList1.getSelectedIndex();
         switch(ch){
             
         
             case 0: //String str=jList1.getSelectedValue(); 
       try{ Class.forName("com.mysql.jdbc.Driver");  
 
        Connection con=DriverManager.getConnection(  
"jdbc:mysql://localhost:3306/hotel","root","mysql123"); 
      
        UpdateInfo ui=new UpdateInfo();
         PreparedStatement st = con.prepareStatement("select hname,rating from hotel where hid in(select hid from roomres group by hid having count(*)"
                 + ">=all (select count(*) from roomres group by hid))");//simple 2
     
        ResultSet res = st.executeQuery();
         
        ResultSetMetaData metadata = res.getMetaData();
        
    HotelInfo hi= new HotelInfo();
   
    int columns = metadata.getColumnCount();
    DefaultTableModel model=new DefaultTableModel();
     hi.jTable1.setModel(model);
    
   
    for (int i = 1; i <= columns; i++)
    {   String st1=metadata.getColumnName(i);
        model.addColumn(st1);
        
    
       
    }
   while (res.next()) {
       Vector row=new Vector();
        for (int i = 1; i <= columns; i++)
       { 
           
       row.add(res.getString(i));
       }
        model.addRow(row);
      
       } 
      
hi.setVisible(true);
   
            con.close();
            
            
      }catch(Exception e){System.out.print(e);}  break;
          
       case 3: //String str=jList1.getSelectedValue(); 
       try{ Class.forName("com.mysql.jdbc.Driver");  
 
        Connection con=DriverManager.getConnection(  
"jdbc:mysql://localhost:3306/hotel","root","mysql123"); 
      
        UpdateInfo ui=new UpdateInfo();
         PreparedStatement st = con.prepareStatement("select avg(price) from rtype");//simple 2
     
        ResultSet res = st.executeQuery();
         
        ResultSetMetaData metadata = res.getMetaData();
        
    HotelInfo hi= new HotelInfo();
   
    int columns = metadata.getColumnCount();
    DefaultTableModel model=new DefaultTableModel();
     hi.jTable1.setModel(model);
    
   
    for (int i = 1; i <= columns; i++)
    {   String st1=metadata.getColumnName(i);
        model.addColumn(st1);
        
    
       
    }
   while (res.next()) {
       Vector row=new Vector();
        for (int i = 1; i <= columns; i++)
       { 
           
       row.add(res.getString(i));
       }
        model.addRow(row);
      
       } 
      
hi.setVisible(true);
   
            con.close();
            
            
      }catch(Exception e){System.out.print(e);}  break;
      
       case 1: //String str=jList1.getSelectedValue(); 
       try{ Class.forName("com.mysql.jdbc.Driver");  
 
        Connection con=DriverManager.getConnection(  
"jdbc:mysql://localhost:3306/hotel","root","mysql123"); 
      
        UpdateInfo ui=new UpdateInfo();
         PreparedStatement st = con.prepareStatement("select room.hid,count(*) from hotel,room where room.hid=hotel.hid group by room.hid");//simple 2
     
        ResultSet res = st.executeQuery();
         
        ResultSetMetaData metadata = res.getMetaData();
        
    HotelInfo hi= new HotelInfo();
   
    int columns = metadata.getColumnCount();
    DefaultTableModel model=new DefaultTableModel();
     hi.jTable1.setModel(model);
    
   
    for (int i = 1; i <= columns; i++)
    {   String st1=metadata.getColumnName(i);
        model.addColumn(st1);
        
    
       
    }
   while (res.next()) {
       Vector row=new Vector();
        for (int i = 1; i <= columns; i++)
       { 
           
       row.add(res.getString(i));
       }
        model.addRow(row);
      
       } 
      
hi.setVisible(true);
   
            con.close();
            
            
      }catch(Exception e){System.out.print(e);}  break;
            
      
             case 2:
                  try{ Class.forName("com.mysql.jdbc.Driver");  
 
        Connection con=DriverManager.getConnection(  
"jdbc:mysql://localhost:3306/hotel","root","mysql123"); 
      
        UpdateInfo ui=new UpdateInfo();
         PreparedStatement st = con.prepareStatement("Select lname,fname from guest where extract(year from dob)<1996 order by fname");//simple 2
         StringBuilder sb=new StringBuilder();
         ResultSet rs = st.executeQuery();
         
         
       // ResultSetMetaData metadata = res.getMetaData();
        ResultSetMetaData metadata = rs.getMetaData();
   /* int columnCount = metadata.getColumnCount();    
    for (int i = 1; i <= columnCount; i++) {
        sb.append(metadata.getColumnName(i) + "\t");
        
    }sb.append("\n");
    //System.out.println();
    while (rs.next()) {
        //String row = "";
        for (int i = 1; i <= columnCount; i++) {
           // row += rs.getString(i) + "\t";  
            sb.append(rs.getString(i)).append("\t");
            
        }sb.append("\n");
        ui.jTextArea1.setText(sb.toString());
        ui.setVisible(true);
    }
            con.close();*/
     HotelInfo hi= new HotelInfo();
   
    int columns = metadata.getColumnCount();
    DefaultTableModel model=new DefaultTableModel();
     hi.jTable1.setModel(model);
    
   
    for (int i = 1; i <= columns; i++)
    {   String st1=metadata.getColumnName(i);
        model.addColumn(st1);
        
    
       
    }
   while (rs.next()) {
       Vector row=new Vector();
        for (int i = 1; i <= columns; i++)
       { 
           
       row.add(rs.getString(i));
       }
        model.addRow(row);
      
       } 
      
hi.setVisible(true);
   
            con.close();
            
            
      }catch(Exception e){System.out.print(e);}break;
                 
       case 4:
                  try{ Class.forName("com.mysql.jdbc.Driver");  
 
        Connection con=DriverManager.getConnection(  
"jdbc:mysql://localhost:3306/hotel","root","mysql123"); 
      
        UpdateInfo ui=new UpdateInfo();
         PreparedStatement st = con.prepareStatement("(select lname,fname from guest g,hotel h,reservation r, roomres rr "
                 + "where rr.rid=r.rid and r.gid=g.gid and h.hid=rr.hid and hname='Ginger Hotel') union (select lname,fname from guest g,hotel h,reservation r, roomres rr "
                 + "where rr.rid=r.rid and r.gid=g.gid and h.hid=rr.hid and hname='Royal Inn') ");//simple 2
         StringBuilder sb=new StringBuilder();
         ResultSet rs = st.executeQuery();
         
        ResultSetMetaData metadata = rs.getMetaData();
    int columnCount = metadata.getColumnCount();    
   /* for (int i = 1; i <= columnCount; i++) {
        sb.append(metadata.getColumnName(i) + "\t");
        
    }sb.append("\n");
    //System.out.println();
    while (rs.next()) {
        //String row = "";
        for (int i = 1; i <= columnCount; i++) {
           // row += rs.getString(i) + "\t";  
            sb.append(rs.getString(i)).append("\t");
            
        }sb.append("\n");
        ui.jTextArea1.setText(sb.toString());
        ui.setVisible(true);
    }*/
    ResultSet res = st.executeQuery();
         
        
    HotelInfo hi= new HotelInfo();
   
    int columns = metadata.getColumnCount();
    DefaultTableModel model=new DefaultTableModel();
     hi.jTable1.setModel(model);
    
   
    for (int i = 1; i <= columns; i++)
    {   String st1=metadata.getColumnName(i);
        model.addColumn(st1);
        
    
       
    }
   while (res.next()) {
       Vector row=new Vector();
        for (int i = 1; i <= columns; i++)
       { 
           
       row.add(res.getString(i));
       }
        model.addRow(row);
      
       } 
      
hi.setVisible(true);
   
            con.close();
            
            
      }catch(Exception e){System.out.print(e);}break;
      
      case 5: //String str=jList1.getSelectedValue(); 
       try{ Class.forName("com.mysql.jdbc.Driver");  
 
        Connection con=DriverManager.getConnection(  
"jdbc:mysql://localhost:3306/hotel","root","mysql123"); 
      
        UpdateInfo ui=new UpdateInfo();
         PreparedStatement st = con.prepareStatement("select hname from hotel h where h.hid in(select hid from roomres group by hid having count(*)>=2)");//simple 2
     
        ResultSet res = st.executeQuery();
         
        ResultSetMetaData metadata = res.getMetaData();
        
    HotelInfo hi= new HotelInfo();
   
    int columns = metadata.getColumnCount();
    DefaultTableModel model=new DefaultTableModel();
     hi.jTable1.setModel(model);
    
   
    for (int i = 1; i <= columns; i++)
    {   String st1=metadata.getColumnName(i);
        model.addColumn(st1);
        
    
       
    }
   while (res.next()) {
       Vector row=new Vector();
        for (int i = 1; i <= columns; i++)
       { 
           
       row.add(res.getString(i));
       }
        model.addRow(row);
      
       } 
      
hi.setVisible(true);
   
            con.close();
            
            
      }catch(Exception e){System.out.print(e);}  break;
      
       case 6:
                  try{ Class.forName("com.mysql.jdbc.Driver");  
 
        Connection con=DriverManager.getConnection(  
"jdbc:mysql://localhost:3306/hotel","root","mysql123"); 
      
        UpdateInfo ui=new UpdateInfo();
        /* PreparedStatement st = con.prepareStatement("create view all_rooms(HOTEL_NAME,ROOM_NUM,DESCRIPTION,PRICE) AS SELECT H.HNAME,"
                 + "R.ROOMNO,RR.DESCRIPTION,RR.PRICE"
                 + " FROM HOTEL H,RTYPE RR,ROOM R WHERE H.HID=R.HID AND R.TYPEID=RR.TYPEID AND HNAME='ROYAL INN'");
                 st.executeUpdate();*/
                 
          PreparedStatement st1 = con.prepareStatement("select * from ROOMALL");
                
        ResultSet res = st1.executeQuery();
         
        ResultSetMetaData metadata = res.getMetaData();
        
    HotelInfo hi= new HotelInfo();
   
    int columns = metadata.getColumnCount();
    DefaultTableModel model=new DefaultTableModel();
     hi.jTable1.setModel(model);
    
   
    for (int i = 1; i <= columns; i++)
    {   String ss=metadata.getColumnName(i);
        model.addColumn(ss);
        
    
       
    }
   while (res.next()) {
       Vector row=new Vector();
        for (int i = 1; i <= columns; i++)
       { 
           
       row.add(res.getString(i));
       }
        model.addRow(row);
      
       } 
      
hi.setVisible(true);
   
         
        
         
      
            con.close();
            
            
      }catch(Exception e){System.out.print(e);}break;
                 
      
         
          case 7:
                  try{ Class.forName("com.mysql.jdbc.Driver");  
 
        Connection con=DriverManager.getConnection(  
"jdbc:mysql://localhost:3306/hotel","root","mysql123"); 
      
        UpdateInfo ui=new UpdateInfo();
        /* PreparedStatement st = con.prepareStatement("create view bill(fname,lname,hotelname,checkin,checkout,amt) as select fname,lname,hname"
                 + ",checkin,checkout,(numofdays*price) from roomres,rtype,reservation,guest,hotel h where roomres.typeid=rtype.typeid and"
                 + " roomres.rid=reservation.rid and reservation.gid=guest.gid and h.hid=roomres.hid; ");//simple 2
         
        st.executeUpdate ();*/
         
        PreparedStatement st1 = con.prepareStatement("select * from BILLING");
                
        ResultSet res = st1.executeQuery();
         
        ResultSetMetaData metadata = res.getMetaData();
        
    HotelInfo hi= new HotelInfo();
   
    int columns = metadata.getColumnCount();
    DefaultTableModel model=new DefaultTableModel();
     hi.jTable1.setModel(model);
    
   
    for (int i = 1; i <= columns; i++)
    {   String ss=metadata.getColumnName(i);
        model.addColumn(ss);
        
    
       
    }
   while (res.next()) {
       Vector row=new Vector();
        for (int i = 1; i <= columns; i++)
       { 
           
       row.add(res.getString(i));
       }
        model.addRow(row);
      
       } 
      
hi.setVisible(true);
   
         
        con.close();
            
            
      }catch(Exception e){System.out.print(e);}break;
       case 8: //String str=jList1.getSelectedValue(); 
       try{ Class.forName("com.mysql.jdbc.Driver");  
 
        Connection con=DriverManager.getConnection(  
"jdbc:mysql://localhost:3306/hotel","root","mysql123"); 
      
        UpdateInfo ui=new UpdateInfo();
         PreparedStatement st = con.prepareStatement("update rtype set price=price*1.1");//simple 2
     
        st.executeUpdate();
        PreparedStatement stt = con.prepareStatement("select * from price_update");
          ResultSet res =stt.executeQuery();
        ResultSetMetaData metadata = res.getMetaData();
        
    HotelInfo hi= new HotelInfo();
   
    int columns = metadata.getColumnCount();
    DefaultTableModel model=new DefaultTableModel();
     hi.jTable1.setModel(model);
    
   
    for (int i = 1; i <= columns; i++)
    {   String st1=metadata.getColumnName(i);
        model.addColumn(st1);
        
    
       
    }
   while (res.next()) {
       Vector row=new Vector();
        for (int i = 1; i <= columns; i++)
       { 
           
       row.add(res.getString(i));
       }
        model.addRow(row);
      
       } 
      
hi.setVisible(true);
   
            con.close();
            
            
      }catch(Exception e){System.out.print(e);}  break;
          
       case 9: //String str=jList1.getSelectedValue(); 
       try{ Class.forName("com.mysql.jdbc.Driver");  
 
        Connection con=DriverManager.getConnection(  
"jdbc:mysql://localhost:3306/hotel","root","mysql123"); 
      
        UpdateInfo ui=new UpdateInfo();
         PreparedStatement st = con.prepareStatement("update rtype set price=price/(1.1)");//simple 2
     
        st.executeUpdate();
        PreparedStatement stt = con.prepareStatement("select * from price_update");
          ResultSet res =stt.executeQuery();
        ResultSetMetaData metadata = res.getMetaData();
        
    HotelInfo hi= new HotelInfo();
   
    int columns = metadata.getColumnCount();
    DefaultTableModel model=new DefaultTableModel();
     hi.jTable1.setModel(model);
    
   
    for (int i = 1; i <= columns; i++)
    {   String st1=metadata.getColumnName(i);
        model.addColumn(st1);
        
    
       
    }
   while (res.next()) {
       Vector row=new Vector();
        for (int i = 1; i <= columns; i++)
       { 
           
       row.add(res.getString(i));
       }
        model.addRow(row);
      
       } 
      
hi.setVisible(true);
   
            con.close();
            
            
      }catch(Exception e){System.out.print(e);}  break;
          
         
         }       
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       this.setVisible(false); // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Predef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Predef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Predef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Predef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Predef().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
